// Generated by CoffeeScript 1.6.3
(function() {
  var default_form_html_wrapper, form_html, form_script, jsonp_wrapper, path, prefixed_url, s3_credentials, url;

  url = require('url');

  path = require('path');

  s3_credentials = require('./s3_credentials');

  prefixed_url = function(prefix, rel_url) {
    var parsed, sep;
    parsed = url.parse(rel_url);
    if (parsed.protocol) {
      return rel_url;
    }
    sep = rel_url[0] === '/' ? '' : '/';
    return path.resolve(prefix, '.' + sep + rel_url);
  };

  form_script = function(form_id, get_credentials_url) {
    return "<script type=\"text/javascript\">\n$(document).ready(function() {\n  var $form = $('form#" + form_id + "');\n  $form.submit(function(event) {\n    if ($form.find('input[name=\"signature\"]').val().length) return true;\n    event.preventDefault();\n    var file = $form.find(\n      'input[type=\"file\"]').val().replace(/.+[\\\/]/, \"\");\n    $.ajax({\n      url: '" + get_credentials_url + "?filename=' + file,\n      dataType: 'jsonp',\n      success: function(res) {\n        console.log('s3 get credentials success', res);\n        $form.find('input[name=\"AWSAccessKeyId\"]').val(res.access_key_id);\n        $form.find('input[name=\"policy\"]').val(res.policy);\n        $form.find('input[name=\"key\"]').val(res.key);\n        $form.find('input[name=\"acl\"]').val(res.acl);\n        $form.find('input[name=\"signature\"]').val(res.signature);\n        $form.find('input[name=\"Content-Type\"]').val(res.content_type);\n        $form.submit();\n      },\n      error: function(res, status, error) {\n        console.log('s3 get credentials failed', status, error);\n      },\n    })\n  });\n});\n</script>";
  };

  form_html = function(bucket_name, opts) {
    var get_credentials_url, success_input, _ref;
    if (opts == null) {
      opts = {};
    }
    if (opts['aws_endpoint'] == null) {
      opts['aws_endpoint'] = (_ref = process.env['AWS_ENDPOINT']) != null ? _ref : 'amazonaws.com';
    }
    if (opts['form_id'] == null) {
      opts['form_id'] = 's3_upload';
    }
    get_credentials_url = prefixed_url(opts['url_prefix'], opts['get_credentials_url']);
    success_input = opts['success_action_status'] ? "<input type=\"hidden\" name=\"success_action_status\" value=\"" + opts['success_action_status'] + "\" />" : opts['success_action_redirect'] ? "<input type=\"hidden\" name=\"success_action_redirect\" value=\"" + opts['success_action_redirect'] + "\" />" : "";
    return "" + (form_script(opts['form_id'], get_credentials_url)) + "\n<form action=\"http://" + bucket_name + "." + opts['aws_endpoint'] + "/\" method=\"post\"\n    enctype=\"multipart/form-data\" id=\"" + opts['form_id'] + "\">\n  <input type=\"hidden\" name=\"key\" />\n  <input type=\"hidden\" name=\"AWSAccessKeyId\" />\n  <input type=\"hidden\" name=\"acl\" />\n  <input type=\"hidden\" name=\"policy\" />\n  <input type=\"hidden\" name=\"signature\" />\n  <input type=\"hidden\" name=\"Content-Type\" />\n  " + success_input + "\n\n  <input type=\"file\" name=\"file\" id=\"file\" />\n  <input type=\"submit\" name=\"submit\" value=\"Upload\" />\n</form>";
  };

  default_form_html_wrapper = function(form_html) {
    return "<html>\n  <head>\n    <title>Upload file</title>\n    <script src=\"http://code.jquery.com/jquery-1.10.1.min.js\"></script>\n  </head>\n  <body>\n    <h1>Upload file</h1>\n    " + form_html + "\n  </body>\n</html>";
  };

  jsonp_wrapper = function(json, callback) {
    if (callback == null) {
      callback = 'callback';
    }
    return "window." + callback + " && window." + callback + "(" + (JSON.stringify(json)) + ");";
  };

  module.exports = function(opts) {
    var form_html_wrapper, get_credentials_pathname, middleware, upload_form_pathname, _ref;
    if (opts == null) {
      opts = {};
    }
    if (!opts['success_action_redirect']) {
      if (opts['success_action_status'] == null) {
        opts['success_action_status'] = '201';
      }
    }
    if (opts['form_url'] == null) {
      opts['form_url'] = '/s3/upload';
    }
    if (opts['get_credentials_url'] == null) {
      opts['get_credentials_url'] = '/s3/get-credentials';
    }
    if (opts['bucket_name'] == null) {
      opts['bucket_name'] = process.env['S3_UPLOAD_BUCKET'];
    }
    if (!opts['bucket_name']) {
      throw "ERROR missing parameter 'bucket_name'";
    }
    form_html_wrapper = (_ref = opts['form_html_wrapper']) != null ? _ref : default_form_html_wrapper;
    upload_form_pathname = opts['form_url'] && url.parse(opts['form_url']).pathname;
    get_credentials_pathname = opts['get_credentials_url'] && url.parse(opts['get_credentials_url']).pathname;
    middleware = {
      handle: function(req, res, next) {
        var filename, pathname, request_url;
        request_url = url.parse(req.url, true);
        if (opts['url_prefix'] == null) {
          opts['url_prefix'] = middleware.route || '/';
        }
        pathname = request_url.pathname;
        if (pathname === get_credentials_pathname) {
          res.setHeader('Content-Type', 'text/javascript');
          if (filename = request_url.query['filename']) {
            return s3_credentials(filename, opts, function(credentials) {
              return res.end(jsonp_wrapper(credentials, request_url.query['callback']));
            });
          } else {
            res.writeHead(400, 'Missing filename');
            return res.end();
          }
        } else if (pathname === upload_form_pathname) {
          res.setHeader('Content-Type', 'text/html');
          return res.end(form_html_wrapper(form_html(opts['bucket_name'], opts)));
        } else {
          return next();
        }
      },
      config: opts
    };
    return middleware;
  };

}).call(this);
